/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TratamientoTexto;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import javax.swing.JOptionPane;
import static javax.swing.SwingConstants.CENTER;
import static javax.swing.SwingConstants.LEFT;
import static javax.swing.SwingConstants.RIGHT;
import javax.swing.UIManager;

/**
 *
 * @author Moth
 */
public class TratamientoTexto extends javax.swing.JFrame {

    String writen = "";
    Font normal = UIManager.getDefaults().getFont("TabbedPane.font");
    Font bold = new Font("default", Font.BOLD, 16);
    Font italic = new Font("default", Font.ITALIC, 16);
    int fontnum = 0;
    private Component frame;

    /**
     * Creates new form TextChanger
     */
    public TratamientoTexto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        TextWriten = new javax.swing.JTextField();
        CenteredButton = new javax.swing.JRadioButton();
        RightButton = new javax.swing.JRadioButton();
        LeftButton = new javax.swing.JRadioButton();
        RedButton = new javax.swing.JRadioButton();
        GreenButton = new javax.swing.JRadioButton();
        BlackButton = new javax.swing.JRadioButton();
        AuthorButton = new javax.swing.JButton();
        ItalicButton = new javax.swing.JCheckBox();
        BoldButton = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextWriten.setText("Escribe aqu√≠ tu texto");
        TextWriten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextWritenActionPerformed(evt);
            }
        });

        buttonGroup1.add(CenteredButton);
        CenteredButton.setText("Centrado");
        CenteredButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CenteredButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(RightButton);
        RightButton.setText("Derecha");
        RightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(LeftButton);
        LeftButton.setSelected(true);
        LeftButton.setText("Izquierda");
        LeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(RedButton);
        RedButton.setText("Rojo");
        RedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(GreenButton);
        GreenButton.setText("Verde");
        GreenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GreenButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(BlackButton);
        BlackButton.setSelected(true);
        BlackButton.setText("Negro");
        BlackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlackButtonActionPerformed(evt);
            }
        });

        AuthorButton.setText("Autor");
        AuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AuthorButtonActionPerformed(evt);
            }
        });

        ItalicButton.setText("Cursiva");
        ItalicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItalicButtonActionPerformed(evt);
            }
        });

        BoldButton.setText("Negrita");
        BoldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoldButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(RedButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GreenButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(LeftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CenteredButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TextWriten, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BoldButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AuthorButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ItalicButton)
                            .addComponent(BlackButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(TextWriten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CenteredButton)
                    .addComponent(LeftButton)
                    .addComponent(RightButton)
                    .addComponent(RedButton)
                    .addComponent(GreenButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BlackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(ItalicButton)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AuthorButton)
                    .addComponent(BoldButton))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextWritenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextWritenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextWritenActionPerformed

    private void RedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedButtonActionPerformed
        TextWriten.setForeground(Color.red);
        // TODO add your handling code here:
    }//GEN-LAST:event_RedButtonActionPerformed

    private void GreenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GreenButtonActionPerformed
        // TODO add your handling code here:
        TextWriten.setForeground(Color.green);
    }//GEN-LAST:event_GreenButtonActionPerformed

    private void BlackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlackButtonActionPerformed
        // TODO add your handling code here:
        TextWriten.setForeground(Color.black);
    }//GEN-LAST:event_BlackButtonActionPerformed

    private void ItalicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItalicButtonActionPerformed

        if (ItalicButton.isSelected()) {
            TextWriten.setFont(italic);
        } else {
            TextWriten.setFont(normal);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ItalicButtonActionPerformed

    private void BoldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoldButtonActionPerformed
        // TODO add your handling code here:
        if (BoldButton.isSelected()) {
            TextWriten.setFont(bold);
        } else {
            TextWriten.setFont(normal);
        }
    }//GEN-LAST:event_BoldButtonActionPerformed

    private void AuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthorButtonActionPerformed

        JOptionPane.showMessageDialog(frame, "Autor: Adri√°n Polit Diago (Moth)");        // TODO add your handling code here:
    }//GEN-LAST:event_AuthorButtonActionPerformed

    private void LeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftButtonActionPerformed
        // TODO add your handling code here:
        TextWriten.setHorizontalAlignment(LEFT);

    }//GEN-LAST:event_LeftButtonActionPerformed

    private void CenteredButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CenteredButtonActionPerformed
        // TODO add your handling code here:
        TextWriten.setHorizontalAlignment(CENTER);

    }//GEN-LAST:event_CenteredButtonActionPerformed

    private void RightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightButtonActionPerformed
        // TODO add your handling code here:

        TextWriten.setHorizontalAlignment(RIGHT);
    }//GEN-LAST:event_RightButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TratamientoTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TratamientoTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TratamientoTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TratamientoTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TratamientoTexto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AuthorButton;
    private javax.swing.JRadioButton BlackButton;
    private javax.swing.JCheckBox BoldButton;
    private javax.swing.JRadioButton CenteredButton;
    private javax.swing.JRadioButton GreenButton;
    private javax.swing.JCheckBox ItalicButton;
    private javax.swing.JRadioButton LeftButton;
    private javax.swing.JRadioButton RedButton;
    private javax.swing.JRadioButton RightButton;
    private javax.swing.JTextField TextWriten;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    // End of variables declaration//GEN-END:variables
}